!function(root,factory){"object"==typeof exports&&"object"==typeof module?module.exports=factory():"function"==typeof define&&define.amd?define([],factory):"object"==typeof exports?exports.myUIAssets=factory():root.myUIAssets=factory()}(this,(()=>(()=>{"use strict";var __webpack_require__={d:(exports,definition)=>{for(var key in definition)__webpack_require__.o(definition,key)&&!__webpack_require__.o(exports,key)&&Object.defineProperty(exports,key,{enumerable:!0,get:definition[key]})},o:(obj,prop)=>Object.prototype.hasOwnProperty.call(obj,prop),r:exports=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(exports,"__esModule",{value:!0})}},__webpack_exports__={};__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DropDownMenu:()=>DropDownMenu,ImageSlider:()=>ImageSlider});const appendChildren=function(element,children){children.forEach((child=>element.appendChild(child)))},createElement=function(elementTag,elementClass,...attributes){const element=document.createElement(elementTag);return elementClass&&element.classList.add(elementClass),attributes.forEach((attribute=>{element.setAttribute(attribute[0],attribute[1])})),element},createMaterialIcon=function(style,className,name){const icon=createElement("span",className);return icon.classList.add(`material-symbols-${style}`),icon.textContent=` ${name} `,icon};class DropDownMenu{#type;#menuItems;#body;#currentActiveDropDown;constructor(type="click"){this.#type=type,this.#menuItems=[],this.#currentActiveDropDown=null}addMenuItem(name,href="#"){return this.#menuItems.push({name,href})}addSubMenuItem(parentName,subName,subLinkHRef){let parent=this.#menuItems.find((menuItem=>menuItem.name===parentName));void 0===parent&&(parent=this.#menuItems[this.addMenuItem(parentName)-1]),Object.hasOwn(parent,"subMenu")||(parent.subMenu=[],parent.dropDownIsOpen=!1),parent.subMenu.push({subName,subLinkHRef})}getDOM(){const menu=createElement("div","drop-down-menu");return this.#menuItems.forEach((menuItem=>{if(Object.hasOwn(menuItem,"subMenu")){const dropDownContent=createElement("div","drop-down-content"),dropDownLink=createElement("a","drop-down-link",["href","#"]),dropDownText=createElement("span","drop-down-text");dropDownText.textContent=menuItem.name,appendChildren(dropDownLink,[dropDownText,createMaterialIcon("outlined","drop-down-icon","arrow_drop_down")]),dropDownContent.appendChild(dropDownLink);const subMenu=createElement("div","sub-menu");menuItem.subMenu.forEach((subMenuItem=>{const subLink=createElement("a","sub-link",["href",subMenuItem.subLinkHRef]);subLink.textContent=subMenuItem.subName,subMenu.appendChild(subLink)})),subMenu.style.maxHeight="0",subMenu.style.opacity="0",dropDownContent.appendChild(subMenu),menu.appendChild(dropDownContent),"click"===this.#type?dropDownLink.addEventListener("click",(()=>{if(dropDownLink.classList.contains("active"))dropDownLink.classList.remove("active"),dropDownLink.querySelector(".drop-down-icon").style.transform="rotateX(0deg)",subMenu.style.maxHeight="0",subMenu.style.opacity="0",this.#currentActiveDropDown=null;else{null!==this.#currentActiveDropDown&&(this.#currentActiveDropDown.classList.remove("active"),this.#currentActiveDropDown.querySelector(".drop-down-icon").style.transform="rotateX(0deg)",this.#currentActiveDropDown.nextElementSibling.style.maxHeight="0",this.#currentActiveDropDown.nextElementSibling.style.opacity="0"),dropDownLink.classList.add("active"),dropDownLink.querySelector(".drop-down-icon").style.transform="rotateX(180deg)";const subLink=subMenu.querySelector(".sub-link"),maxHeight=getComputedStyle(subLink).getPropertyValue("height").slice(0,-2)*menuItem.subMenu.length;subMenu.style.maxHeight=`${maxHeight}px`,subMenu.style.opacity="1",this.#currentActiveDropDown=dropDownLink}})):this.#type}else{const menuLink=createElement("a","menu-link",["href",menuItem.href]);menuLink.textContent=menuItem.name,menu.appendChild(menuLink)}})),menu}}class ImageSlider{#images;#currentIndex;#indicators;#autoSlideInterval;constructor(autoSlideInterval=0){this.#images=[],this.#indicators=[],this.#currentIndex=0,this.#autoSlideInterval=autoSlideInterval}addImage(image){this.#images.push(image)}getDOM(){const imageSliderFrame=createElement("div","image-slider-frame"),imageContainer=createElement("div","images"),imageSliderUI=createElement("div","image-slider-ui"),imageIndicators=createElement("div","image-indicators"),imageCounter=createElement("div","image-counter"),currentImageNumber=createElement("span","current-image-number");currentImageNumber.textContent=this.#currentIndex+1;const imageCounterSeparator=createElement("span","separator");imageCounterSeparator.textContent="/";const numberOfImages=createElement("span","number-of-images");let intervalId;numberOfImages.textContent=this.#images.length,appendChildren(imageCounter,[currentImageNumber,imageCounterSeparator,numberOfImages]);const moveSlider=indexChange=>{this.#indicators[this.#currentIndex].classList.remove("current-indicator"),this.#currentIndex+=indexChange,this.#currentIndex<0?this.#currentIndex=this.#images.length-1:this.#currentIndex>this.#images.length-1&&(this.#currentIndex=0),this.#indicators[this.#currentIndex].classList.add("current-indicator");const frameWidth=Number(getComputedStyle(imageSliderFrame).getPropertyValue("width").slice(0,-2));imageContainer.scrollLeft=frameWidth*this.#currentIndex,setTimeout((()=>{currentImageNumber.textContent=this.#currentIndex+1}),frameWidth/2),this.#autoSlideInterval>0&&(clearInterval(intervalId),intervalId=setInterval((()=>moveSlider(1)),this.#autoSlideInterval))};this.#images.forEach(((image,index)=>{imageContainer.appendChild(image);const imageIndicator=createElement("button","image-indicator",["data-index",index]);imageIndicator.addEventListener("click",(()=>{const indicatorIndex=Number(imageIndicator.getAttribute("data-index"));indicatorIndex!==this.#currentIndex&&moveSlider(indicatorIndex-this.#currentIndex)})),this.#indicators.push(imageIndicator),imageIndicators.appendChild(imageIndicator)}));const leftBtn=createElement("button","arrow-button",["id","left"]);leftBtn.appendChild(createMaterialIcon("outlined","button-icon","navigate_before")),leftBtn.addEventListener("click",(()=>moveSlider(-1)));const rightBtn=createElement("button","arrow-button",["id","right"]);return rightBtn.appendChild(createMaterialIcon("outlined","button-icon","navigate_next")),rightBtn.addEventListener("click",(()=>moveSlider(1))),appendChildren(imageSliderUI,[imageIndicators,imageCounter,leftBtn,rightBtn]),appendChildren(imageSliderFrame,[imageContainer,imageSliderUI]),this.#indicators[0].classList.add("current-indicator"),imageContainer.scrollLeft=0,currentImageNumber.textContent=1,this.#autoSlideInterval>0&&(intervalId=setInterval((()=>moveSlider(1)),this.#autoSlideInterval)),imageSliderFrame}}return __webpack_exports__})()));